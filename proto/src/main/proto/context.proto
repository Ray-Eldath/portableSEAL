syntax = "proto3";

package portableSEAL;
option csharp_namespace = "portableSEAL.Services";
option java_package = "ray.eldath.portableseal";

import "transmission.proto";
import "util.proto";
import "id.proto";

// @formatter:off
service BfvContext {
    rpc Create (ContextParameters) returns (ContextId) {}
    rpc Restore (SerializedContext) returns (ContextId) {}
    rpc Export (Nothing) returns (SerializedContext) {}
    rpc Clear (Nothing) returns (Nothing) {}

    rpc Encrypt (EncryptionNecessity) returns (SerializedCiphertext) {}
    rpc Decrypt (DecryptionNecessity) returns (DecryptionResult) {}

    rpc ParseCiphertext (SerializedCiphertext) returns (CiphertextId) {}
    rpc MakePlaintext (PlaintextData) returns (PlaintextId) {}
    rpc KeyGen (Nothing) returns (KeyPair) {}
}
// @formatter:on

message EncryptionNecessity {
    oneof Plaintext {
        PlaintextId PlaintextId = 1;
        PlaintextData PlaintextData = 2;
    }

    oneof PublicKey {
        KeyPairId PublicKeyId = 10;
        bytes PublicKeyBytes = 11;
    }
}

message DecryptionNecessity {
    oneof Ciphertext {
        CiphertextId CiphertextId = 1;
        SerializedCiphertext SerializedCiphertext = 2;
    }

    oneof SecretKey {
        KeyPairId SecretKeyId = 10;
        bytes SecretKeyBytes = 11;
    }
}

message ContextParameters {
    repeated sint32 CoeffModulus = 20;
    oneof PlainModulus {
        uint64 PlainModulusNumber = 30;
        sint32 PlainModulusBitSize = 31;
    }
    uint64 PolyModulusDegree = 40;
}